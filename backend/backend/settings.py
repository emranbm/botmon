"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('BOTMON_SECRET_KEY', 'fake-secret')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

CURRENT_APPS = [
    'main'
]

INSTALLED_APPS = [
                     'django.contrib.admin',
                     'django.contrib.auth',
                     'django.contrib.contenttypes',
                     'django.contrib.sessions',
                     'django.contrib.messages',
                     'django.contrib.staticfiles',
                     'rest_framework',
                     'rest_framework.authtoken',
                 ] + CURRENT_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'NAME': 'telegrambot',
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['main/telegrambot/templates'],
        'APP_DIRS': False,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('BOTMON_DB_NAME', 'botmon_db'),
        'USER': os.environ.get('BOTMON_DB_USER', 'botmon'),
        'PASSWORD': os.environ.get('BOTMON_DB_PASSWORD', 'dummy'),
        'HOST': os.environ.get('BOTMON_DB_HOST', 'localhost'),
        'PORT': os.environ.get('BOTMON_DB_PORT', '5432'),
        'TEST': {
            'NAME': 'test_db',
        },
    }
}

CACHE_NAME_AUTH_CODES = 'auth-codes'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'default-in-memory-cache',
    },
    CACHE_NAME_AUTH_CODES: {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'auth-codes-cache',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = "main.User"

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = 'static'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DRF_RECAPTCHA_SECRET_KEY = os.environ.get('RECAPTCHA_SERVER_KEY', 'dummy')
DRF_RECAPTCHA_TESTING = True

TELEGRAM_BOT_TOKEN = os.environ.get('BOTMON_TELEGRAM_BOT_TOKEN', 'dummy')
TELEGRAM_PROXY_URL = os.environ.get('BOTMON_TELEGRAM_PROXY_URL', None)

TELEGRAM_AGENT_SESSION_STRING = os.environ.get('BOTMON_TELEGRAM_AGENT_SESSION_STRING', 'dummy')
TELEGRAM_AGENT_API_ID = int(os.environ.get('BOTMON_TELEGRAM_AGENT_API_ID', 12345))
TELEGRAM_AGENT_API_HASH = os.environ.get('BOTMON_TELEGRAM_AGENT_API_HASH', 'dummy')
TELEGRAM_AGENT_HEALTH_CHECK_MESSAGE = os.environ.get('BOTMON_TELEGRAM_AGENT_HEALTH_CHECK_MESSAGE', '/botmoncheck')
TELEGRAM_AGENT_HEALTH_CHECK_TIMEOUT_SECONDS = int(os.environ.get('BOTMON_TELEGRAM_AGENT_HEALTH_CHECK_TIMEOUT_SECONDS', 1))
TELEGRAM_AGENT_HEALTH_CHECK_RETRIES = int(os.environ.get('BOTMON_TELEGRAM_AGENT_HEALTH_CHECK_RETRIES', 1))

HEARTBEAT_RECEIVER_CHAT_ID = int(os.environ.get('BOTMON_HEARTBEAT_RECEIVER_CHAT_ID', 12345))
HEARTBEAT_PERIOD_SECONDS = 24 * 60 * 60

ALERT_CERTAINTY_WAIT_SECONDS = 3 * 60
